#include <bits/stdc++.h>
using namespace std;
vector<int>adj[10001];
int dep[10000];
int parent[10000];
bool isLeaf[10000];
int numChild[10000];
int subtreeS[10000];
void dfs(int node,int p,int depth){
    dep[node]=depth;
    parent[node]=p;
    numChild[node]=0;
    subtreeS[node]=1;
    for(auto nbr:adj[node]){
        if(nbr!=p){
            numChild[node]++;
            dfs(nbr,node,depth+1);
            subtreeS[node]+=subtreeS[nbr];
        }
    }
    if(numChild[node]==0){
        isLeaf[node]=1;
    }
}
int main(){
      int n;
      cin>>n;
      for(int i=0;i<n-1;i++){
        int a,b;
        cin>>a>>b;
        adj[a].push_back(b);
        adj[b].push_back(a);
      }
      dfs(1,-1,0);
}
